{"version":3,"sources":["components/Common/Palette.js","components/Common/Common.js","components/Exchange/StyledExchange.js","components/Exchange/ExchangeHeader/StyledHeaders.js","components/Exchange/ExchangeHeader/ExchangeHeader.js","components/Exchange/StyledInputContainer.js","components/Exchange/StyledSearch.js","components/Exchange/ExchangeSearch.js","components/Exchange/ExchangePrimaryInput.js","components/Exchange/ExchangeSecondaryInput.js","components/Exchange/Exchange.js","App.js","reportWebVitals.js","index.js"],"names":["Palette","Background","styled","div","AppContainer","StyledExchange","StyledHeaders","ExchangeHeader","StyledInputContainer","StyledSearch","ExchangeSearch","currencyList","currentInput","setCurrentInput","supplementaryInput","setSupplementaryInput","useState","searchValue","setSearchValue","searchList","setSearchList","handleChoice","e","currency","target","getAttribute","icon","name","searchStatus","useEffect","timeout","setTimeout","filter","item","toLowerCase","includes","ticker","clearTimeout","searchTicker","substring","toUpperCase","onClick","className","alt","src","placeholder","type","value","onChange","map","cur","image","currencyname","uuidv4","ExchangePrimaryInput","primaryInput","setPrimaryInput","secondaryInput","setSecondaryInput","validation","newCurrencyList","c","disabled","errorStatus","lang","test","Number","ExchangeSecondaryInput","readOnly","Exchange","wallet","setWallet","minValue","Infinity","errorMessage","setValidation","getExchangeAmount","useCallback","v","a","apiLinkEstimated","axios","get","getEstimatedAmount","estimatedAmount","data","i","length","apiLinkAmount","getMinAmount","minAmount","p","newSecondaryCurrency","newPrimaryCurrency","faExchangeAlt","color","w","console","log","App","list","setList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAaA,EACC,UADDA,EAED,UAFCA,EAGA,UAHAA,EAIC,U,maCDP,IAAMC,EAAaC,IAAOC,IAAV,IACDH,GAOTI,EAAeF,IAAOC,IAAV,K,42ECTlB,IAAME,EAAiBH,IAAOC,IAAV,IAYHH,EAiGAA,G,gRC5GjB,IAAMM,EAAgBJ,IAAOC,IAAV,IAGbH,EAIAA,GCPAO,EAAiB,WAC5B,OACE,eAACD,EAAD,WACE,iDACA,4D,gTCLC,IAAME,EAAuBN,IAAOC,IAAV,K,2wFCA1B,IAAMM,EAAeP,IAAOC,IAAV,IAKHH,EACCA,EAiCOA,EAgBJA,EA4CTA,EAyBSA,GCzHbU,EAAiB,SAAC,GAMxB,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,sBACI,EAEkCC,mBAAS,IAF3C,mBAEGC,EAFH,KAEgBC,EAFhB,OAGgCF,mBAASL,GAHzC,mBAGGQ,EAHH,KAGeC,EAHf,KAuBEC,EAAe,SAAAC,GACnB,IAAMC,EAAWD,EAAEE,OAAOC,aAAa,UACjCC,EAAOJ,EAAEE,OAAOC,aAAa,QAC7BE,EAAOL,EAAEE,OAAOC,aAAa,gBACnCZ,EAAgB,2BACXD,GADU,IAEbW,WACAG,OACAC,OACAC,cAAc,MAYlBC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACL,KAAhBd,GACFG,EACET,EAAaqB,QACX,SAAAC,GAAI,OACFA,EAAKN,KAAKO,cAAcC,SAASlB,EAAYiB,gBAC7CD,EAAKG,OAAOF,cAAcC,SAASlB,EAAYiB,mBAInC,KAAhBjB,GACFG,EAAcT,KAEf,KACH,OAAO,WACL0B,aAAaP,MAEd,CAACb,EAAaN,IAGjB,IAAM2B,EAAe1B,EAAaW,SAASgB,UAAU,EAAG,GAAGC,cAE3D,OACE,eAAC/B,EAAD,WACE,sBAAKgC,QA/DiB,WACxB5B,EAAgB,2BACXD,GADU,IAEbgB,cAAc,KAEZd,EAAmBc,cACrBb,EAAsB,2BACjBD,GADgB,IAEnBc,cAAc,MAuDiBc,UAAU,wBAA3C,UACE,qBACEA,UAAU,qBACVC,IAAK/B,EAAaW,SAClBqB,IAAKhC,EAAac,OAEpB,qBAAKgB,UAAU,SAAf,SAAyBJ,OAE3B,sBACEI,UAAS,sBACP9B,EAAagB,aAAe,gBAAkB,IAFlD,UAKE,qBAAKc,UAAU,QAAQD,QA9CR,WACnB5B,EAAgB,2BACXD,GADU,IAEbgB,cAAc,QA4CZ,uBACEc,UAAU,eACVG,YAAY,SACZC,KAAK,OACLC,MAAO9B,EACP+B,SArEc,SAAA1B,GACpBJ,EAAeI,EAAEE,OAAOuB,UAsEpB,6BACG5B,EAAW8B,KAAI,SAAAC,GACd,OACE,qBACEd,OAAQc,EAAId,OACZV,KAAMwB,EAAIC,MACVC,aAAcF,EAAIvB,KAElBc,QAASpB,EALX,UAOE,qBAAKuB,IAAKM,EAAIC,MAAOR,IAAKO,EAAId,SAC9B,qBAAKM,UAAU,0BAAf,SACGQ,EAAId,OAAOI,gBAEd,qBAAKE,UAAU,wBAAf,SAAwCQ,EAAIvB,SAPvC0B,2BCxGRC,EAAuB,SAAC,GAO9B,IANL3C,EAMI,EANJA,aACA4C,EAKI,EALJA,aACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,WAeMC,EAAkBjD,EAAaqB,QACnC,SAAA6B,GAAC,OAAIA,EAAEzB,SAAWqB,EAAelC,YAEnC,OACE,eAACf,EAAD,WACE,uBACEsD,SAAqC,iBAA3BH,EAAWI,YACrBrB,UAAU,eACVsB,KAAK,KACLlB,KAAK,OACLC,MAAOQ,EAAaR,MACpBC,SAvBoB,SAAA1B,IAGD,KAAnBA,EAAEE,OAAOuB,OADF,wCACqBkB,KAAKC,OAAO5C,EAAEE,OAAOuB,UACnDS,EAAgB,2BACXD,GADU,IAEbR,MAAOzB,EAAEE,OAAOuB,YAmBlB,cAAC,EAAD,CACEnC,aAAc2C,EACd1C,gBAAiB2C,EACjB1C,mBAAoB2C,EACpB1C,sBAAuB2C,EACvB/C,aAAciD,QCvCTO,EAAyB,SAAC,GAOhC,IANLxD,EAMI,EANJA,aACA8C,EAKI,EALJA,eACAC,EAII,EAJJA,kBACAH,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBACAG,EACI,EADJA,WAGMC,EAAkBjD,EAAaqB,QACnC,SAAA6B,GAAC,OAAIA,EAAEzB,SAAWmB,EAAahC,YAEjC,OACE,eAACf,EAAD,WACE,uBACEsD,SAC6B,aAA3BH,EAAWI,aACgB,iBAA3BJ,EAAWI,YAIbrB,UAAU,eACVI,KAAK,OACLC,MAC6B,aAA3BY,EAAWI,YAA6B,SAAMN,EAAeV,MAE/DqB,UAAQ,IAEV,cAAC,EAAD,CACExD,aAAc6C,EACd5C,gBAAiB6C,EACjB5C,mBAAoByC,EACpBxC,sBAAuByC,EACvB7C,aAAciD,QC5BTS,EAAW,SAAC,GAAsB,IAAD,YAAnB1D,EAAmB,EAAnBA,aAAmB,EAEJK,mBAAS,CAC/C+B,MAAO,GACPxB,UAAU,UAAAZ,EAAa,UAAb,eAAiByB,SAAU,GACrCV,MAAM,UAAAf,EAAa,UAAb,eAAiBwC,QAAS,GAChCxB,MAAM,UAAAhB,EAAa,UAAb,eAAiBgB,OAAQ,GAC/BC,cAAc,IAP4B,mBAErC2B,EAFqC,KAEvBC,EAFuB,OASAxC,mBAAS,CACnD+B,MAAO,GACPxB,UAAU,UAAAZ,EAAa,UAAb,eAAiByB,SAAU,GACrCV,MAAM,UAAAf,EAAa,UAAb,eAAiBwC,QAAS,GAChCxB,MAAM,UAAAhB,EAAa,UAAb,eAAiBgB,OAAQ,GAC/BC,cAAc,IAd4B,mBASrC6B,EATqC,KASrBC,EATqB,OAiBhB1C,mBAAS,CACnC+B,MAAOU,EAAe9B,OAlBoB,mBAiBrC2C,EAjBqC,KAiB7BC,EAjB6B,OAqBRvD,mBAAS,CAC3CwD,SAAUC,IACVV,YAAa,GACbW,aAAc,KAxB4B,mBAqBrCf,EArBqC,KAqBzBgB,EArByB,KAwCtCC,EAAoBC,uBACxB,SAAA9B,GACMA,EAAQY,EAAWa,UAAYb,EAAWa,WAAaC,IACzDE,GAAc,SAAAG,GAAC,kCACVA,GADU,IAEbf,YAAa,WACbW,aAAa,oBAAD,OAAsBf,EAAWa,eAG/CzC,WAAU,sBAAC,gCAAAgD,EAAA,6DACHC,EADG,sDAC+DjC,EAD/D,YACwEQ,EAAahC,SADrF,YACiGkC,EAAelC,SADhH,8EAEwB0D,IAAMC,IAAIF,GAFlC,OAEHG,EAFG,OAIe,QADlBC,EAAkBD,EAAmBE,KAAKD,mBAE9C1B,GAAkB,SAAA4B,GAAC,kCACdA,GADc,IAEjBvC,MAAOqC,OAETT,GAAc,SAAAG,GAAC,kCACVA,GADU,IAEbf,YAAa,GACbW,aAAc,SAGM,OAApBU,GACFT,GAAc,SAAAG,GAAC,kCACVA,GADU,IAEbf,YAAa,eACbW,aAAc,uCAnBT,2CAsBR,KAGP,CAACnB,EAAahC,SAAUkC,EAAelC,SAAUoC,EAAWa,WAiC9D,OA7BA3C,qBAAU,WACRE,WAAU,sBAAC,gCAAAgD,EAAA,gEACJpE,QADI,IACJA,OADI,EACJA,EAAc4E,OADV,wDAEHC,EAFG,iDAEuDjC,EAAahC,SAFpE,YAEgFkC,EAAelC,SAF/F,8EAGkB0D,IAAMC,IAAIM,GAH5B,OAGHC,EAHG,OAKS,QADZC,EAAYD,EAAaJ,KAAKK,WAElCf,GAAc,SAAAG,GAAC,kCACVA,GADU,IAEbf,YAAa,eACbW,aAAc,wCAGhBlB,GAAgB,SAAAmC,GAAC,kCAAUA,GAAV,IAAa5C,MAAO2C,OACrCf,EAAc,CACZH,SAAUkB,EACV3B,YAAa,GACbW,aAAc,KAEhBE,EAAkBc,IAlBX,2CAoBR,KACF,CACDnC,EAAahC,SACbkC,EAAelC,SACfqD,EAHC,OAIDjE,QAJC,IAIDA,OAJC,EAIDA,EAAc4E,SAId,eAAClF,EAAD,WACE,cAAC,EAAD,IACA,qBACEqC,UAAS,yBACPiB,EAAWI,YAAc,eAAiB,IAF9C,mBAKMJ,EAAWe,gBAEjB,sBAAKhC,UAAU,gBAAf,UACE,cAAC,EAAD,CACE/B,aAAcA,GAAgB,GAC9B4C,aAAcA,EACdC,gBAAiB,SAAAT,GACfS,EAAgBT,GAChB6B,EAAkB7B,EAAMA,QAE1BU,eAAgBA,EAChBC,kBAAmBA,EACnBC,WAAYA,IAEd,qBAAKjB,UAAU,SAASD,QArGR,WACpB,IAAMmD,EAAuBrC,EACvBsC,EAAqBpC,EAE3BD,EAAgB,eACXqC,IAELnC,EAAkB,eACbkC,KA6FD,SACE,cAAC,IAAD,CAAiBlE,KAAMoE,IAAeC,MAAM,cAE9C,cAAC,EAAD,CACEpF,aAAcA,GAAgB,GAC9B8C,eAAgBA,EAChBC,kBAAmB,SAAAX,GACjBW,EAAkBX,GAClBwB,GAAU,SAAAyB,GAAC,kCACNA,GADM,IAETjD,MAAOA,EAAMpB,WAGjB4B,aAAcA,EACdC,gBAAiB,SAAAT,GACfkD,QAAQC,IAAI,eACZ1C,EAAgBT,IAElBY,WAAYA,OAGhB,sBAAKjB,UAAU,cAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,0CAAa4B,EAAOvB,MAApB,cACA,uBAAOD,KAAK,YAEd,wBAAQA,KAAK,SAAb,6BCzIOqD,MArBf,WAAgB,IAAD,EACWnF,mBAAS,IADpB,mBACNoF,EADM,KACAC,EADA,KAWb,OATAxE,qBAAU,WACRE,WAAU,sBAAC,4BAAAgD,EAAA,sEACUE,IAAMC,IACvB,qEAFO,OACHkB,EADG,OAITC,EAAQD,EAAKf,MAJJ,2CAKR,KACF,IAGD,sBAAK3C,UAAU,MAAf,UACE,cAACzC,EAAD,IACA,cAACG,EAAD,UACGgG,EAAKb,OAAS,cAAC,EAAD,CAAU5E,aAAcyF,IAAW,WCT3CE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb2dba60.chunk.js","sourcesContent":["export const Palette = {\r\n  brandColor: '#137E6E',\r\n  darkGray: '#282828',\r\n  lightGray: '#A7A7A7',\r\n  background: '#F4F4F4'\r\n}\r\n","import styled from 'styled-components'\r\nimport { Palette } from './Palette'\r\n\r\nexport const Background = styled.div`\r\n  background-color: ${Palette.background};\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: -1;\r\n  clip-path: polygon(0 0, 0% 100%, 100% 0);\r\n  position: absolute;\r\n`\r\nexport const AppContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n","import styled from 'styled-components'\r\nimport { Palette } from '../Common/Palette'\r\nexport const StyledExchange = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 1024px) {\r\n    height: 30%;\r\n    width: 60%;\r\n  }\r\n  input {\r\n    height: 2.8rem;\r\n    border-radius: 3px;\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n    border: 1px solid ${Palette.darkGray};\r\n    padding-left: 0.5rem;\r\n    font-size: 1rem;\r\n  }\r\n  .amount-input {\r\n    border-right: none;\r\n    width: 65%;\r\n  }\r\n\r\n  input:active,\r\n  input:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .exchange-error {\r\n    position: absolute;\r\n    font-size: 0.8rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 1rem;\r\n    background-color: rgba(230, 20, 20, 0.8);\r\n    color: #fff;\r\n    top: 0;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    z-index: 3;\r\n    transition: all 0.4s ease-out;\r\n    transform: translateY(4rem);\r\n    opacity: 0;\r\n    @media (max-width: 1024px) {\r\n      top: 0;\r\n      transform: translateY(3.8rem);\r\n    }\r\n  }\r\n\r\n  .error-active {\r\n    opacity: 1;\r\n  }\r\n\r\n  .exchange-form {\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    @media (max-width: 1024px) {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  .arrows {\r\n    margin: 0 0.7rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    @media (max-width: 1024px) {\r\n      margin: 1rem;\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  .wallet-form {\r\n    margin-top: 1.4rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    @media (max-width: 1024px) {\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  .wallet-address {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 65%;\r\n    @media (max-width: 1024px) {\r\n      margin-bottom: 1rem;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .wallet-address label {\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  .wallet-address input {\r\n    margin-top: 0.3rem;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  .wallet-form button {\r\n    width: 30%;\r\n    height: 2.8rem;\r\n    border-radius: 3px;\r\n    border: none;\r\n    background-color: ${Palette.brandColor};\r\n    color: white;\r\n    font-size: 1rem;\r\n    @media (max-width: 1024px) {\r\n      min-width: 40%;\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    display: flex;\r\n  }\r\n\r\n  transform: scale(1.5);\r\n  height: 14rem;\r\n  width: 35rem;\r\n`\r\n","import styled from 'styled-components'\r\nimport { Palette } from '../../Common/Palette'\r\n\r\nexport const StyledHeaders = styled.div`\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    color: ${Palette.brandColor};\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  h3 {\r\n    color: ${Palette.darkGray};\r\n    font-size: 1.1rem;\r\n    font-weight: 400;\r\n    margin-left: 0.1rem;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StyledHeaders } from './StyledHeaders'\r\n\r\nexport const ExchangeHeader = () => {\r\n  return (\r\n    <StyledHeaders>\r\n      <h2>Crypto Exchange</h2>\r\n      <h3>Exchange fast and easy</h3>\r\n    </StyledHeaders>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledInputContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  input {\r\n    border-right: none;\r\n    width: 65%;\r\n  }\r\n\r\n  input::-webkit-calendar-picker-indicator {\r\n    display: none;\r\n  }\r\n\r\n  input:active,\r\n  input:focus {\r\n    outline: none;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { Palette } from '../Common/Palette'\r\nexport const StyledSearch = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 2.8rem;\r\n  background-color: white;\r\n  border: 1px solid ${Palette.darkGray};\r\n  border-left-color: ${Palette.lightGray};\r\n  width: 35%;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  cursor: pointer;\r\n\r\n  .cryptocurrency-choice {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    img {\r\n      width: 35%;\r\n      height: 45%;\r\n    }\r\n\r\n    .ticker {\r\n      width: 2.1rem;\r\n      padding-left: 0.3rem;\r\n    }\r\n  }\r\n  .cryptocurrency-choice p {\r\n    width: 60%;\r\n  }\r\n\r\n  .exchange-form {\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    position: relative;\r\n  }\r\n\r\n  .search-input {\r\n    border-right: 1px solid ${Palette.darkGray};\r\n  }\r\n\r\n  .search-list {\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: none;\r\n    z-index: 2;\r\n    input {\r\n      width: 100%;\r\n      border-bottom-left-radius: 0;\r\n      border-top-right-radius: 3px;\r\n    }\r\n    ul {\r\n      border: 1px solid ${Palette.lightGray};\r\n      border-top: none;\r\n      border-bottom-right-radius: 3px;\r\n      border-bottom-left-radius: 3px;\r\n      list-style-type: none;\r\n      width: 100%;\r\n      background-color: white;\r\n      height: 6rem;\r\n      overflow-y: scroll;\r\n      scrollbar-width: thin;\r\n      scrollbar-color: rgba(19, 126, 110, 0.2) transparent;\r\n      &::-webkit-scrollbar {\r\n        width: 5px;\r\n      }\r\n      &::-webkit-scrollbar-track {\r\n        background: transparent;\r\n      }\r\n      &::-webkit-scrollbar-thumb {\r\n        background-color: rgba(19, 126, 110, 0.2);\r\n        border-radius: 3px;\r\n        border: transparent;\r\n      }\r\n    }\r\n    li {\r\n      height: 2rem;\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n      div,\r\n      img {\r\n        pointer-events: none;\r\n      }\r\n      &:hover {\r\n        background-color: rgba(19, 126, 110, 0.2);\r\n      }\r\n      img {\r\n        margin-left: 0.5rem;\r\n      }\r\n      .search-list-item-ticker {\r\n        width: 7rem;\r\n        margin: 0 0.5rem;\r\n      }\r\n      .search-list-item-name {\r\n        color: ${Palette.lightGray};\r\n        font-size: 0.6rem;\r\n      }\r\n    }\r\n    .close {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      width: 2rem;\r\n      height: 2.7rem;\r\n      opacity: 0.3;\r\n      cursor: pointer;\r\n    }\r\n    .close:hover {\r\n      opacity: 1;\r\n    }\r\n    .close:before,\r\n    .close:after {\r\n      top: 0.9rem;\r\n      right: 1rem;\r\n      position: absolute;\r\n      content: ' ';\r\n\r\n      height: 1rem;\r\n      width: 0.1rem;\r\n      background-color: ${Palette.darkGray};\r\n    }\r\n    .close:before {\r\n      transform: rotate(45deg);\r\n    }\r\n    .close:after {\r\n      transform: rotate(-45deg);\r\n    }\r\n  }\r\n  .search-active {\r\n    display: block;\r\n  }\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { StyledSearch } from './StyledSearch'\r\n// import { useOutsideClose } from '../hooks/useOutsideClose'\r\n\r\nexport const ExchangeSearch = ({\r\n  currencyList,\r\n  currentInput,\r\n  setCurrentInput,\r\n  supplementaryInput,\r\n  setSupplementaryInput\r\n}) => {\r\n  // State\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [searchList, setSearchList] = useState(currencyList)\r\n\r\n  // Handlers\r\n  const handleSearchClick = () => {\r\n    setCurrentInput({\r\n      ...currentInput,\r\n      searchStatus: true\r\n    })\r\n    if (supplementaryInput.searchStatus) {\r\n      setSupplementaryInput({\r\n        ...supplementaryInput,\r\n        searchStatus: false\r\n      })\r\n    }\r\n  }\r\n\r\n  const searchHandler = e => {\r\n    setSearchValue(e.target.value)\r\n  }\r\n\r\n  const handleChoice = e => {\r\n    const currency = e.target.getAttribute('ticker')\r\n    const icon = e.target.getAttribute('icon')\r\n    const name = e.target.getAttribute('currencyname')\r\n    setCurrentInput({\r\n      ...currentInput,\r\n      currency,\r\n      icon,\r\n      name,\r\n      searchStatus: false\r\n    })\r\n  }\r\n\r\n  const closeHandler = () => {\r\n    setCurrentInput({\r\n      ...currentInput,\r\n      searchStatus: false\r\n    })\r\n  }\r\n\r\n  // useEffects\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      if (searchValue !== '') {\r\n        setSearchList(\r\n          currencyList.filter(\r\n            item =>\r\n              item.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n              item.ticker.toLowerCase().includes(searchValue.toLowerCase())\r\n          )\r\n        )\r\n      }\r\n      if (searchValue === '') {\r\n        setSearchList(currencyList)\r\n      }\r\n    }, 100)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [searchValue, currencyList])\r\n\r\n  // Temporary measure for displaying long tickers\r\n  const searchTicker = currentInput.currency.substring(0, 3).toUpperCase()\r\n\r\n  return (\r\n    <StyledSearch>\r\n      <div onClick={handleSearchClick} className='cryptocurrency-choice'>\r\n        <img\r\n          className='cryptocurrency-img'\r\n          alt={currentInput.currency}\r\n          src={currentInput.icon}\r\n        />\r\n        <div className='ticker'>{searchTicker}</div>\r\n      </div>\r\n      <div\r\n        className={`search-list ${\r\n          currentInput.searchStatus ? 'search-active' : ''\r\n        }`}\r\n      >\r\n        <div className='close' onClick={closeHandler}></div>\r\n        <input\r\n          className='search-input'\r\n          placeholder='Search'\r\n          type='text'\r\n          value={searchValue}\r\n          onChange={searchHandler}\r\n        />\r\n        <ul>\r\n          {searchList.map(cur => {\r\n            return (\r\n              <li\r\n                ticker={cur.ticker}\r\n                icon={cur.image}\r\n                currencyname={cur.name}\r\n                key={uuidv4()}\r\n                onClick={handleChoice}\r\n              >\r\n                <img src={cur.image} alt={cur.ticker} />\r\n                <div className='search-list-item-ticker'>\r\n                  {cur.ticker.toUpperCase()}\r\n                </div>\r\n                <div className='search-list-item-name'>{cur.name}</div>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </StyledSearch>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StyledInputContainer } from './StyledInputContainer'\r\nimport { ExchangeSearch } from './ExchangeSearch'\r\n\r\nexport const ExchangePrimaryInput = ({\r\n  currencyList,\r\n  primaryInput,\r\n  setPrimaryInput,\r\n  secondaryInput,\r\n  setSecondaryInput,\r\n  validation\r\n}) => {\r\n  // Handlers\r\n  const handleInputChange = e => {\r\n    // Check for float and decimals\r\n    const re = /^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$/\r\n    if (e.target.value === '' || re.test(Number(e.target.value))) {\r\n      setPrimaryInput({\r\n        ...primaryInput,\r\n        value: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  // Filter out currency of supplementary input\r\n  const newCurrencyList = currencyList.filter(\r\n    c => c.ticker !== secondaryInput.currency\r\n  )\r\n  return (\r\n    <StyledInputContainer>\r\n      <input\r\n        disabled={validation.errorStatus === 'disabledPair' ? true : false}\r\n        className='amount-input'\r\n        lang='en'\r\n        type='text'\r\n        value={primaryInput.value}\r\n        onChange={handleInputChange}\r\n      />\r\n      <ExchangeSearch\r\n        currentInput={primaryInput}\r\n        setCurrentInput={setPrimaryInput}\r\n        supplementaryInput={secondaryInput}\r\n        setSupplementaryInput={setSecondaryInput}\r\n        currencyList={newCurrencyList}\r\n      />\r\n    </StyledInputContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { StyledInputContainer } from './StyledInputContainer'\r\nimport { ExchangeSearch } from './ExchangeSearch'\r\n\r\nexport const ExchangeSecondaryInput = ({\r\n  currencyList,\r\n  secondaryInput,\r\n  setSecondaryInput,\r\n  primaryInput,\r\n  setPrimaryInput,\r\n  validation\r\n}) => {\r\n  // Filter out currency of supplementary input\r\n  const newCurrencyList = currencyList.filter(\r\n    c => c.ticker !== primaryInput.currency\r\n  )\r\n  return (\r\n    <StyledInputContainer>\r\n      <input\r\n        disabled={\r\n          validation.errorStatus === 'minValue' ||\r\n          validation.errorStatus === 'disabledPair'\r\n            ? true\r\n            : false\r\n        }\r\n        className='amount-input'\r\n        type='text'\r\n        value={\r\n          validation.errorStatus === 'minValue' ? '—' : secondaryInput.value\r\n        }\r\n        readOnly\r\n      />\r\n      <ExchangeSearch\r\n        currentInput={secondaryInput}\r\n        setCurrentInput={setSecondaryInput}\r\n        supplementaryInput={primaryInput}\r\n        setSupplementaryInput={setPrimaryInput}\r\n        currencyList={newCurrencyList}\r\n      />\r\n    </StyledInputContainer>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { StyledExchange } from './StyledExchange'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { ExchangeHeader } from './ExchangeHeader/ExchangeHeader'\r\nimport { ExchangePrimaryInput } from './ExchangePrimaryInput'\r\nimport { ExchangeSecondaryInput } from './ExchangeSecondaryInput'\r\n\r\nexport const Exchange = ({ currencyList }) => {\r\n  // State\r\n  const [primaryInput, setPrimaryInput] = useState({\r\n    value: '',\r\n    currency: currencyList[0]?.ticker || '',\r\n    icon: currencyList[0]?.image || '',\r\n    name: currencyList[0]?.name || '',\r\n    searchStatus: false\r\n  })\r\n  const [secondaryInput, setSecondaryInput] = useState({\r\n    value: '',\r\n    currency: currencyList[1]?.ticker || '',\r\n    icon: currencyList[1]?.image || '',\r\n    name: currencyList[1]?.name || '',\r\n    searchStatus: false\r\n  })\r\n\r\n  const [wallet, setWallet] = useState({\r\n    value: secondaryInput.name\r\n  })\r\n\r\n  const [validation, setValidation] = useState({\r\n    minValue: Infinity,\r\n    errorStatus: '',\r\n    errorMessage: ''\r\n  })\r\n\r\n  // Handlers\r\n  const switchHandler = () => {\r\n    const newSecondaryCurrency = primaryInput\r\n    const newPrimaryCurrency = secondaryInput\r\n\r\n    setPrimaryInput({\r\n      ...newPrimaryCurrency\r\n    })\r\n    setSecondaryInput({\r\n      ...newSecondaryCurrency\r\n    })\r\n  }\r\n\r\n  const getExchangeAmount = useCallback(\r\n    value => {\r\n      if (value < validation.minValue && validation.minValue !== Infinity) {\r\n        setValidation(v => ({\r\n          ...v,\r\n          errorStatus: 'minValue',\r\n          errorMessage: `Minimum value is ${validation.minValue}`\r\n        }))\r\n      } else {\r\n        setTimeout(async () => {\r\n          const apiLinkEstimated = `https://api.changenow.io/v1/exchange-amount/${value}/${primaryInput.currency}_${secondaryInput.currency}?c9155859d90d239f909d2906233816b26cd8cf5ede44702d422667672b58b0cd`\r\n          const getEstimatedAmount = await axios.get(apiLinkEstimated)\r\n          const estimatedAmount = getEstimatedAmount.data.estimatedAmount\r\n          if (estimatedAmount !== null) {\r\n            setSecondaryInput(i => ({\r\n              ...i,\r\n              value: estimatedAmount\r\n            }))\r\n            setValidation(v => ({\r\n              ...v,\r\n              errorStatus: '',\r\n              errorMessage: ''\r\n            }))\r\n          }\r\n          if (estimatedAmount === null) {\r\n            setValidation(v => ({\r\n              ...v,\r\n              errorStatus: 'disabledPair',\r\n              errorMessage: 'This pair is currently disabled'\r\n            }))\r\n          }\r\n        }, 0)\r\n      }\r\n    },\r\n    [primaryInput.currency, secondaryInput.currency, validation.minValue]\r\n  )\r\n\r\n  //useEffects\r\n  useEffect(() => {\r\n    setTimeout(async () => {\r\n      if (!currencyList?.length) return\r\n      const apiLinkAmount = `https://api.changenow.io/v1/min-amount/${primaryInput.currency}_${secondaryInput.currency}?c9155859d90d239f909d2906233816b26cd8cf5ede44702d422667672b58b0cd`\r\n      const getMinAmount = await axios.get(apiLinkAmount)\r\n      const minAmount = getMinAmount.data.minAmount\r\n      if (minAmount === null) {\r\n        setValidation(v => ({\r\n          ...v,\r\n          errorStatus: 'disabledPair',\r\n          errorMessage: 'This pair is currently disabled'\r\n        }))\r\n      } else {\r\n        setPrimaryInput(p => ({ ...p, value: minAmount }))\r\n        setValidation({\r\n          minValue: minAmount,\r\n          errorStatus: '',\r\n          errorMessage: ''\r\n        })\r\n        getExchangeAmount(minAmount)\r\n      }\r\n    }, 0)\r\n  }, [\r\n    primaryInput.currency,\r\n    secondaryInput.currency,\r\n    getExchangeAmount,\r\n    currencyList?.length\r\n  ])\r\n\r\n  return (\r\n    <StyledExchange>\r\n      <ExchangeHeader />\r\n      <div\r\n        className={`exchange-error ${\r\n          validation.errorStatus ? 'error-active' : ''\r\n        }`}\r\n      >\r\n        {`${validation.errorMessage}`}\r\n      </div>\r\n      <div className='exchange-form'>\r\n        <ExchangePrimaryInput\r\n          currencyList={currencyList || []}\r\n          primaryInput={primaryInput}\r\n          setPrimaryInput={value => {\r\n            setPrimaryInput(value)\r\n            getExchangeAmount(value.value)\r\n          }}\r\n          secondaryInput={secondaryInput}\r\n          setSecondaryInput={setSecondaryInput}\r\n          validation={validation}\r\n        />\r\n        <div className='arrows' onClick={switchHandler}>\r\n          <FontAwesomeIcon icon={faExchangeAlt} color='#137e6e' />\r\n        </div>\r\n        <ExchangeSecondaryInput\r\n          currencyList={currencyList || []}\r\n          secondaryInput={secondaryInput}\r\n          setSecondaryInput={value => {\r\n            setSecondaryInput(value)\r\n            setWallet(w => ({\r\n              ...w,\r\n              value: value.name\r\n            }))\r\n          }}\r\n          primaryInput={primaryInput}\r\n          setPrimaryInput={value => {\r\n            console.log('setprimary2')\r\n            setPrimaryInput(value)\r\n          }}\r\n          validation={validation}\r\n        />\r\n      </div>\r\n      <div className='wallet-form'>\r\n        <div className='wallet-address'>\r\n          <label>Your {wallet.value} address</label>\r\n          <input type='text' />\r\n        </div>\r\n        <button type='submit'>EXCHANGE</button>\r\n      </div>\r\n    </StyledExchange>\r\n  )\r\n}\r\n","import './App.css'\nimport axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Background, AppContainer } from './components/Common/Common'\nimport { Exchange } from './components/Exchange/Exchange'\n\nfunction App() {\n  const [list, setList] = useState([])\n  useEffect(() => {\n    setTimeout(async () => {\n      const list = await axios.get(\n        'https://api.changenow.io/v1/currencies?active=true&fixedRate=true'\n      )\n      setList(list.data)\n    }, 0)\n  }, [])\n\n  return (\n    <div className='App'>\n      <Background />\n      <AppContainer>\n        {list.length ? <Exchange currencyList={list} /> : null}\n      </AppContainer>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}